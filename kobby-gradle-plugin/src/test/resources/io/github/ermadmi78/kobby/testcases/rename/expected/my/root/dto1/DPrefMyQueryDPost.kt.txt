@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
)

package my.root.dto1

import com.fasterxml.jackson.`annotation`.JsonInclude
import com.fasterxml.jackson.`annotation`.JsonTypeInfo
import com.fasterxml.jackson.`annotation`.JsonTypeName
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply
import kotlin.collections.List
import kotlin.let
import my.root.ctx.PrefCtxDSLPostCtx

@JsonTypeName(value = "MyQuery")
@JsonTypeInfo(
  use = JsonTypeInfo.Id.NAME,
  include = JsonTypeInfo.As.PROPERTY,
  property = "__typename",
  defaultImpl = DPrefMyQueryDPost::class,
)
@JsonInclude(value = JsonInclude.Include.NON_ABSENT)
public data class DPrefMyQueryDPost(
  public val country: DPrefCountryDPost? = null,
  public val countries: List<DPrefCountryDPost>? = null,
  public val film: DPrefFilmDPost? = null,
  public val films: List<DPrefFilmDPost>? = null,
  public val actor: DPrefActorDPost? = null,
  public val actors: List<DPrefActorDPost>? = null,
)

public fun DPrefMyQueryDPost(block: BPrefDPrefMyQueryDPostBPost.() -> Unit): DPrefMyQueryDPost {
  // DPrefMyQueryDPost builder DSL
  return BPrefDPrefMyQueryDPostBPost().apply(block).let {
    DPrefMyQueryDPost(
          it.country,
          it.countries,
          it.film,
          it.films,
          it.actor,
          it.actors
        )
  }
}

public fun DPrefMyQueryDPost.replicate(block: BPrefDPrefMyQueryDPostBPost.() -> Unit):
    DPrefMyQueryDPost {
  // DPrefMyQueryDPost replicate DSL
  return BPrefDPrefMyQueryDPostBPost().also {
    it.country = this.country
    it.countries = this.countries
    it.film = this.film
    it.films = this.films
    it.actor = this.actor
    it.actors = this.actors
  }
  .apply(block).let {
    DPrefMyQueryDPost(
          it.country,
          it.countries,
          it.film,
          it.films,
          it.actor,
          it.actors
        )
  }
}

@PrefCtxDSLPostCtx
public class BPrefDPrefMyQueryDPostBPost {
  public var country: DPrefCountryDPost? = null

  public var countries: List<DPrefCountryDPost>? = null

  public var film: DPrefFilmDPost? = null

  public var films: List<DPrefFilmDPost>? = null

  public var actor: DPrefActorDPost? = null

  public var actors: List<DPrefActorDPost>? = null
}
