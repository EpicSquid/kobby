@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package my.root.re

import graphql.kickstart.tools.GraphQLResolver
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.TODO
import kotlin.collections.List
import my.root.dto1.DPrefActorDPost
import my.root.dto1.DPrefCountryDPost
import my.root.dto1.DPrefFilmDPost
import my.root.dto1.EPrefGenreEPost

public interface RePrActorRePo : GraphQLResolver<DPrefActorDPost> {
  public suspend fun fields(bean: DPrefActorDPost, keys: List<String>?): String = TODO("ToDo")

  public suspend fun country(bean: DPrefActorDPost): DPrefCountryDPost = TODO("ToDo")

  public suspend fun films(
    bean: DPrefActorDPost,
    title: String?,
    genre: EPrefGenreEPost?,
    limit: Int,
    offset: Int,
  ): List<DPrefFilmDPost> = TODO("ToDo")
}
