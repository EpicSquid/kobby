@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments"
)

package io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.dto

import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.ContextFunOnlyDSL
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply
import kotlin.collections.List
import kotlin.let

public data class ActorDto(
  public override val id: Long? = null,
  public override val tags: List<TagDto>? = null,
  public val firstName: String? = null,
  public val lastName: String? = null,
  public val gender: Gender? = null,
  public val countryId: Long? = null,
  public val country: CountryDto? = null,
  public val films: List<FilmDto>? = null
) : EntityDto, TaggableDto, NativeDto

public fun ActorDto(block: ActorDtoBuilder.() -> Unit): ActorDto {
  // ActorDto builder DSL
  return ActorDtoBuilder().apply(block).let {
    ActorDto(
          it.id,
          it.tags,
          it.firstName,
          it.lastName,
          it.gender,
          it.countryId,
          it.country,
          it.films
        )
  }
}

public fun ActorDto.copy(block: ActorDtoBuilder.() -> Unit): ActorDto {
  // ActorDto copy DSL
  return ActorDtoBuilder().also {
    it.id = this.id
    it.tags = this.tags
    it.firstName = this.firstName
    it.lastName = this.lastName
    it.gender = this.gender
    it.countryId = this.countryId
    it.country = this.country
    it.films = this.films
  }
  .apply(block).let {
    ActorDto(
          it.id,
          it.tags,
          it.firstName,
          it.lastName,
          it.gender,
          it.countryId,
          it.country,
          it.films
        )
  }
}

@ContextFunOnlyDSL
public class ActorDtoBuilder {
  public var id: Long? = null

  public var tags: List<TagDto>? = null

  public var firstName: String? = null

  public var lastName: String? = null

  public var gender: Gender? = null

  public var countryId: Long? = null

  public var country: CountryDto? = null

  public var films: List<FilmDto>? = null
}
