@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
)

package my.root.re

import graphql.kickstart.tools.GraphQLResolver
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.TODO
import kotlin.collections.List
import my.root.dto1.DPrefActorDPost
import my.root.dto1.DPrefCountryDPost
import my.root.dto1.DPrefFilmDPost
import my.root.dto1.EPrefGenderEPost

public interface RePrFilmRePo : GraphQLResolver<DPrefFilmDPost> {
  public suspend fun fields(bean: DPrefFilmDPost, keys: List<String>?): String = TODO("ToDo")

  public suspend fun country(bean: DPrefFilmDPost): DPrefCountryDPost = TODO("ToDo")

  public suspend fun actors(
    bean: DPrefFilmDPost,
    firstName: String?,
    lastName: String?,
    gender: EPrefGenderEPost?,
    limit: Int,
    offset: Int,
  ): List<DPrefActorDPost> = TODO("ToDo")
}
