@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.ContextFunOnlyContext
import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.ContextFunOnlyDSL
import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.dto.ActorInput
import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.dto.FilmInput
import io.github.ermadmi78.kobby.testcases.context_fun_only.kobby.kotlin.dto.TagInput
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.Unit

public interface Mutation {
  public val createCountry: Country

  public val createFilm: Film

  public val createActor: Actor

  public fun __context(): ContextFunOnlyContext

  public fun MutationProjection.__withCurrentProjection(): Unit
}

@ContextFunOnlyDSL
public interface MutationProjection {
  public fun createCountry(name: String, __projection: CountryProjection.() -> Unit = {}): Unit

  public fun createFilm(
    countryId: Long,
    film: FilmInput,
    __query: MutationCreateFilmQuery.() -> Unit = {},
  ): Unit

  public fun createActor(
    countryId: Long,
    actor: ActorInput,
    __query: MutationCreateActorQuery.() -> Unit = {},
  ): Unit

  public fun __minimize(): Unit {
  }
}

@ContextFunOnlyDSL
public interface MutationCreateFilmSelection {
  public var tags: TagInput?
}

@ContextFunOnlyDSL
public interface MutationCreateFilmQuery : MutationCreateFilmSelection, FilmProjection

@ContextFunOnlyDSL
public interface MutationCreateActorSelection {
  public var tags: TagInput?
}

@ContextFunOnlyDSL
public interface MutationCreateActorQuery : MutationCreateActorSelection, ActorProjection
