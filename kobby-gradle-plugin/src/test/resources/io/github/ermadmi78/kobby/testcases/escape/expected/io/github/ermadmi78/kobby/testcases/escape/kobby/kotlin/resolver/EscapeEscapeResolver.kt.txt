@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.resolver

import graphql.kickstart.tools.GraphQLResolver
import io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.dto.EscapeDto
import io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.dto.PointDto
import kotlin.Int
import kotlin.Suppress
import kotlin.collections.List

public interface EscapeEscapeResolver : GraphQLResolver<EscapeDto> {
  public suspend fun points(
    escape: EscapeDto,
    `do`: Int,
    `by`: Int,
  ): List<PointDto>
}
