@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.dto

import com.fasterxml.jackson.`annotation`.JsonInclude
import com.fasterxml.jackson.`annotation`.JsonTypeInfo
import com.fasterxml.jackson.`annotation`.JsonTypeName
import io.github.ermadmi78.kobby.testcases.escape.kobby.kotlin.EscapeDSL
import kotlin.Suppress
import kotlin.Unit
import kotlin.also
import kotlin.apply
import kotlin.collections.List
import kotlin.let

@JsonTypeName(value = "Query")
@JsonTypeInfo(
  use = JsonTypeInfo.Id.NAME,
  include = JsonTypeInfo.As.PROPERTY,
  property = "__typename",
  defaultImpl = QueryDto::class,
)
@JsonInclude(value = JsonInclude.Include.NON_ABSENT)
public data class QueryDto(
  public val escapes: List<EscapeDto>? = null,
  public val escapesSelection: List<EscapeDto>? = null,
  public val severalPrimaryKeys: SeveralPrimaryKeysDto? = null,
)

public fun QueryDto(block: QueryDtoBuilder.() -> Unit): QueryDto {
  // QueryDto builder DSL
  return QueryDtoBuilder().apply(block).let {
    QueryDto(
          it.escapes,
          it.escapesSelection,
          it.severalPrimaryKeys
        )
  }
}

public fun QueryDto.copy(block: QueryDtoBuilder.() -> Unit): QueryDto {
  // QueryDto copy DSL
  return QueryDtoBuilder().also {
    it.escapes = this.escapes
    it.escapesSelection = this.escapesSelection
    it.severalPrimaryKeys = this.severalPrimaryKeys
  }
  .apply(block).let {
    QueryDto(
          it.escapes,
          it.escapesSelection,
          it.severalPrimaryKeys
        )
  }
}

@EscapeDSL
public class QueryDtoBuilder {
  public var escapes: List<EscapeDto>? = null

  public var escapesSelection: List<EscapeDto>? = null

  public var severalPrimaryKeys: SeveralPrimaryKeysDto? = null
}
