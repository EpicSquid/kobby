@file:Suppress(
  "RedundantVisibilityModifier",
  "RedundantUnitReturnType",
  "FunctionName",
  "PropertyName",
  "ObjectPropertyName",
  "MemberVisibilityCanBePrivate",
  "ConstantConditionIf",
  "CanBeParameter",
  "unused",
  "RemoveExplicitTypeArguments",
  "RedundantSuppression",
  "KotlinRedundantDiagnosticSuppress",
)

package io.github.ermadmi78.kobby.testcases.schema_files.kobby.kotlin.entity

import io.github.ermadmi78.kobby.testcases.schema_files.kobby.kotlin.GraphqlContext
import io.github.ermadmi78.kobby.testcases.schema_files.kobby.kotlin.GraphqlDSL
import kotlin.String
import kotlin.Suppress
import kotlin.Unit

public interface Mutation {
  public val createCountry: Country

  public fun __context(): GraphqlContext

  public fun MutationProjection.__withCurrentProjection(): Unit
}

@GraphqlDSL
public interface MutationProjection {
  public fun createCountry(name: String, __projection: CountryProjection.() -> Unit): Unit

  public fun __minimize(): Unit {
  }
}
